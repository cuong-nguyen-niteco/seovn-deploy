{"version":3,"sources":["../../../server/config/express.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;uBAEO,SAAS;;;;4BACT,eAAe;;;;sBAChB,QAAQ;;;;2BACH,aAAa;;;;0BACd,aAAa;;;;8BACT,iBAAiB;;;;4BACnB,eAAe;;;;4BACf,cAAc;;;;oBACtB,MAAM;;;;qBACL,OAAO;;;;2BACN,eAAe;;;;8BACd,iBAAiB;;;;AAErC,MAAM,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE;AAC5B,QAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;;AAEzB,OAAG,CAAC,GAAG,CAAC,OAAO,EAAE,yBAAO,IAAI,GAAG,eAAe,CAAC,CAAC;AAChD,OAAG,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;AAC/B,OAAG,CAAC,GAAG,CAAC,+BAAa,CAAC,CAAC;AACvB,OAAG,CAAC,GAAG,CAAC,wBAAW,UAAU,CAAC,EAAC,QAAQ,EAAE,KAAK,EAAC,CAAC,CAAC,CAAC;AAClD,OAAG,CAAC,GAAG,CAAC,wBAAW,IAAI,EAAE,CAAC,CAAC;AAC3B,OAAG,CAAC,GAAG,CAAC,kCAAgB,CAAC,CAAC;AAC1B,OAAG,CAAC,GAAG,CAAC,gCAAc,CAAC,CAAC;;;;;AAKxB,OAAG,CAAC,GAAG,CAAC,iCAAQ;AACZ,cAAM,EAAE,yBAAO,OAAO,CAAC,OAAO;AAC9B,yBAAiB,EAAE,IAAI;AACvB,cAAM,EAAE,KAAK;KAChB,CAAC,CAAC,CAAC;;;;;;AAMJ,QAAI,MAAM,KAAK,GAAG,EAAE;AAChB,WAAG,CAAC,GAAG,CAAC,wBAAM;AACV,gBAAI,EAAE;AACF,uBAAO,EAAE,IAAI;aAChB;AACD,kBAAM,EAAE,YAAY;AACpB,gBAAI,EAAE;AACF,sBAAM,EAAE,QAAQ;AAChB,iCAAiB,EAAE,IAAI;AACvB,uBAAO,EAAE,IAAI;aAChB;AACD,yBAAa,EAAE,IAAI;SACtB,CAAC,CAAC,CAAC;KACP;;AAED,OAAG,CAAC,GAAG,CAAC,SAAS,EAAE,kBAAK,IAAI,CAAC,yBAAO,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;;AAErD,QAAI,YAAY,KAAK,GAAG,EAAE;AACtB,WAAG,CAAC,GAAG,CAAC,+BAAQ,kBAAK,IAAI,CAAC,yBAAO,IAAI,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;AAClE,WAAG,CAAC,GAAG,CAAC,8BAAc,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5C,WAAG,CAAC,GAAG,CAAC,yBAAO,KAAK,CAAC,CAAC,CAAC;KAC1B;;AAED,QAAI,aAAa,KAAK,GAAG,EAAE;AACvB,WAAG,CAAC,GAAG,CAAC,OAAO,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;KAC5C;;AAED,QAAI,aAAa,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;AACzC,WAAG,CAAC,GAAG,CAAC,8BAAc,CAAC,kBAAK,IAAI,CAAC,yBAAO,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;AACxD,WAAG,CAAC,GAAG,CAAC,8BAAc,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5C,WAAG,CAAC,GAAG,CAAC,yBAAO,KAAK,CAAC,CAAC,CAAC;AACvB,WAAG,CAAC,GAAG,CAAC,gCAAc,CAAC,CAAC;KAC3B;CACJ,CAAC","file":"express.js","sourcesContent":["/**\n * Express configuration\n */\n\n'use strict';\n\nimport express from 'express';\nimport favicon from 'serve-favicon';\nimport morgan from 'morgan';\nimport compression from 'compression';\nimport bodyParser from 'body-parser';\nimport methodOverride from 'method-override';\nimport cookieParser from 'cookie-parser';\nimport errorHandler from 'errorhandler';\nimport path from 'path';\nimport lusca from 'lusca';\nimport config from './environment';\nimport session from 'express-session';\n\nmodule.exports = function (app) {\n    var env = app.get('env');\n\n    app.set('views', config.root + '/server/views');\n    app.set('view engine', 'jade');\n    app.use(compression());\n    app.use(bodyParser.urlencoded({extended: false}));\n    app.use(bodyParser.json());\n    app.use(methodOverride());\n    app.use(cookieParser());\n\n    // Persist sessions with mongoStore / sequelizeStore\n    // We need to enable sessions for passport-twitter because it's an\n    // oauth 1.0 strategy, and Lusca depends on sessions\n    app.use(session({\n        secret: config.secrets.session,\n        saveUninitialized: true,\n        resave: false\n    }));\n\n    /**\n     * Lusca - express server security\n     * https://github.com/krakenjs/lusca\n     */\n    if ('test' !== env) {\n        app.use(lusca({\n            csrf: {\n                angular: true\n            },\n            xframe: 'SAMEORIGIN',\n            hsts: {\n                maxAge: 31536000, //1 year, in seconds\n                includeSubDomains: true,\n                preload: true\n            },\n            xssProtection: true\n        }));\n    }\n\n    app.set('appPath', path.join(config.root, 'client'));\n\n    if ('production' === env) {\n        app.use(favicon(path.join(config.root, 'client', 'favicon.ico')));\n        app.use(express.static(app.get('appPath')));\n        app.use(morgan('dev'));\n    }\n\n    if ('development' === env) {\n        app.use(require('connect-livereload')());\n    }\n\n    if ('development' === env || 'test' === env) {\n        app.use(express.static(path.join(config.root, '.tmp')));\n        app.use(express.static(app.get('appPath')));\n        app.use(morgan('dev'));\n        app.use(errorHandler()); // Error handler - has to be last\n    }\n};\n"]}